
区别：

【router是VueRouter的一个对象，通过Vue.use(VueRouter)和VueRouter构造函数得到一个router的实例对象，这个对象中是一个全局的对象，他包含了所有的路由包含了许多关键的对象和属性】

【route是一个跳转的路由对象，每一个路由都会有一个route对象，是一个局部的对象，可以获取对应的name,path,params,query等】




一、$ route 对象：


	1.$route.path：

		字符串，对应当前路由的路径，总是解析为绝对路径，如 "/home/news"。

	2.$route.params：

      		一个 key/value 对象，包含了 动态片段 和 全匹配片段，如果没有路由参数，就是一个空对象。

	3.$route.query：

      		一个 key/value 对象，表示 URL 查询参数。

     		 例如，对于路径 /home/news/01?user=1，则有 $route.query.user == 1，

      		如果没有查询参数，则是个空对象。

	4.$route.hash：

      		当前路由的 hash 值 (不带 #) ，如果没有 hash 值，则为空字符串。锚点

	5.$route.fullPath：

      		完成解析后的 URL，包含查询参数和 hash 的完整路径。

	6.$route.matched：

      		数组，包含当前匹配的路径中所包含的所有片段所对应的配置参数对象。

	7.$route.name： 

		当前路径名字

	8.$route.meta：

		路由元信息


二、路由实例方法：

	1、push

	（1）字符串this.$router.push('home')

	（2） 对象this.$router.push({path:'home'})

	（3）命名的路由this.$router.push({name:'user',params:{userId:123}})

	（4）带查询参数，变成 /register?plan=123this.$router.push({path:'register',query:{plan:'123'}})

		push方法其实和<router-link :to="...">是等同的。

	
	【注意：】

	push方法的跳转会向 history 栈添加一个新的记录，当我们点击浏览器的返回按钮时可以看到之前的页面。

	2、go

 		页面路由跳转：前进或者后退this.$router.go(-1)   // 后退

	3、replace

		push方法会向 history 栈添加一个新的记录，而replace方法是替换当前的页面，

		不会向 history 栈添加一个新的记录

	【注】一般使用replace来做404页面

		this.$router.replace('/')

		配置路由时path有时候会加 '/' 有时候不加,以'/'开头的会被当作根路径，就不会一直嵌套之前的路径。




















